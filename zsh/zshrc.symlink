# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/projects

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

fpath=(~/completions $fpath)

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

ZSH_THEME="robbyrussell"
DISABLE_AUTO_UPDATE="true"

source $HOME/.oh-my-zsh/oh-my-zsh.sh

# bindkey '^[[A' history-substring-search-up
# bindkey '^[[B' history-substring-search-down

bindkey '^k' history-substring-search-up
bindkey '^j' history-substring-search-down
bindkey '^h' backward-word
bindkey '^l' forward-word
bindkey '^o' copy-prev-shell-word

# Let zsh ignore lines starting with '#'
set -k

# Let zsh kill suspended zobs with 'exit'
setopt NO_HUP
setopt NO_CHECK_JOBS

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
# will override any of public configs
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

mkdir -p ~/.vim/backup ~/.vim/swap ~/.vim/undo

function goto_es () ssh -A $(mco find -1 -F ecosystem==$1 -F elasticsearch_cluster==$2) ${@:3}
function list_es () python -c "import yaml; import glob; print set.union(*[set(yaml.load(open(a).read())['clusters']) for a in glob.glob('/nail/etc/datastores/*/elasticsearch/clusters.yaml')])"
function goto_cass () ssh -A $(mco find -1 -F ecosystem==$1 -F cassandra_cluster==$2) ${@:3}
function list_cass () python -c "import yaml; import glob; print set.union(*[set(yaml.load(open(a).read())['clusters']) for a in glob.glob('/nail/etc/datastores/*/cassandra/clusters.yaml')])"

function datastores () echo 'import os; import re; import subprocess; from collections import defaultdict; TYPE=os.getenv("datastore", "elasticsearch"); regex1 = re.compile(r"\\s*(\\S*?)\\s+found \\d+ times\\n\\n(.+?)(?:\\n\\n|\\Z)", re.MULTILINE|re.DOTALL); regex2 = re.compile(r"\\s+(\\S+)-(us(?:we|ea)st\\d).(\\w+)")\ndata = subprocess.check_output("mco facts -v {0}_cluster --threaded".format(TYPE), shell=True)\nfor cluster, hosts in regex1.findall(data):\n    print "\\n", cluster, ": "; result = defaultdict(lambda: defaultdict(list))\n    for host in regex2.findall(hosts): result[host[2]][host[1]].append(host[0])\n    for env in result: print env, dict(result[env])\n' | python

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
alias awsinfo="curl http://169.254.169.254/latest/meta-data/"
