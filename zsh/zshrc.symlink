export DISABLE_AUTO_UPDATE=true
# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles
# export ZSH=$HOME/.oh-my-zsh

# your project folder that we can `c [tab]` to
export PROJECTS=~/projects

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

ZSH_THEME="dieter" # "simple" # "robbyrussell"
DISABLE_AUTO_UPDATE="true"

source $HOME/.oh-my-zsh/oh-my-zsh.sh

# bindkey '^[[A' history-substring-search-up
# bindkey '^[[B' history-substring-search-down

bindkey '^k' history-substring-search-up
bindkey '^j' history-substring-search-down
bindkey '^h' backward-word
bindkey '^l' forward-word
bindkey '^o' copy-prev-shell-word

# Let zsh ignore lines starting with '#'
set -k

# Let zsh kill suspended zobs with 'exit'
setopt NO_HUP
setopt NO_CHECK_JOBS

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
# will override any of public configs
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# if [[ -a /usr/local/bin/virtualenvwrapper.sh ]]
# then
#   source /usr/local/bin/virtualenvwrapper.sh
# fi

# test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Disable Ctrl-D from exiting termial window
setopt IGNORE_EOF

mkdir -p ~/.vim/backup ~/.vim/swap ~/.vim/undo

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Add username and hostname to the ZSH PROMPT
# PROMPT="%{$fg[white]%}%n@%{$fg[green]%}%m%{$reset_color%} ${PROMPT}"

# tmux
# if [[ "$TMUX" == "" ]] && [[ "$SSH_CONNECTION" != "" ]]; then
#     WHOAMI=$(whoami)
#     if tmux has-session -t $WHOAMI 2>/dev/null; then
#     tmux -2 attach-session -t $WHOAMI
#     else
#         tmux -2 new-session -s $WHOAMI
#     fi
# fi

# alias awsinfo="curl http://169.254.169.254/latest/meta-data/"

# export WORKON_HOME=$HOME/.virtualenvs
# export PROJECT_HOME=$HOME/Devel
# export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
# source /usr/local/bin/virtualenvwrapper.sh
# workon python27

HISTSIZE=10000000
SAVEHIST=10000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
# setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

# eval "$(direnv hook zsh)"

# Removing timestamp as sometimes the long line commands interferes with time.
# unset RPROMPT


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/prateeka/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/prateeka/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/prateeka/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/prateeka/Downloads/google-cloud-sdk/completion.zsh.inc'; fi
